{"ast":null,"code":"var _jsxFileName = \"/Users/pamelajeanwhite/Documents/devFolder/JS411/JS411Homework/punk-api-react-app/src/App.js\";\nimport React from 'react';\nimport Beers from './components/Beers';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet PUNK_API = 'https://api.punkapi.com/v2/beers';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      //array that is going to hold the beers\n      beers: []\n    };\n  } //componentDidMount is a lifecycle method\n\n\n  async componentDidMount() {\n    let response = await fetch(PUNK_API);\n    let beers = await response.json();\n    console.log(beers);\n    this.setState({\n      beers\n    });\n  } //for us to see an accurate update of our data\n  //cdu tab\n\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log('This is from state: ', this.state.beers);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"PUNK API\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Beers, {\n          beers: this.state.beers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  } //promises\n  //there was an error in this\n  //res was undefined\n  // componentDidMount() {\n  //   fetch(PUNK_API)\n  //   .then((res)= res.json())\n  //  // this.setState updates state, which is currently an empty array\n  //   .then((data) => this.setState{\n  //    //points at beers (which was an empty array) and says beer is now data\n  //    //set data to the label beers\n  //     beers: data\n  //   })\n  // }\n\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/pamelajeanwhite/Documents/devFolder/JS411/JS411Homework/punk-api-react-app/src/App.js"],"names":["React","Beers","PUNK_API","App","Component","constructor","props","state","beers","componentDidMount","response","fetch","json","console","log","setState","componentDidUpdate","prevProps","prevState","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,KAAP,MAAkB,oBAAlB;AAGA,OAAO,WAAP;;AAEA,IAAIC,QAAQ,GAAG,kCAAf;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACX;AACAC,MAAAA,KAAK,EAAE;AAFI,KAAb;AAID,GAP+B,CAQhC;;;AACuB,QAAjBC,iBAAiB,GAAG;AACxB,QAAIC,QAAQ,GAAG,MAAMC,KAAK,CAACT,QAAD,CAA1B;AACA,QAAIM,KAAK,GAAG,MAAME,QAAQ,CAACE,IAAT,EAAlB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACA,SAAKO,QAAL,CAAc;AACZP,MAAAA;AADY,KAAd;AAGD,GAhB+B,CAkBhC;AACA;;;AACAQ,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACvCL,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoC,KAAKP,KAAL,CAAWC,KAA/C;AAED;;AAEDW,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACA;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWC;AAAzB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADF;AAQD,GAlC+B,CAoChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAhDgC;;AAmDlC,eAAeL,GAAf","sourcesContent":["import React from 'react'\n\nimport Beers from './components/Beers'\n\n\nimport './App.css';\n\nlet PUNK_API = 'https://api.punkapi.com/v2/beers'\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      //array that is going to hold the beers\n      beers: []\n    }\n  }\n  //componentDidMount is a lifecycle method\n  async componentDidMount() {\n    let response = await fetch(PUNK_API);\n    let beers = await response.json()\n    console.log(beers)\n    this.setState({\n      beers\n    })\n  }\n\n  //for us to see an accurate update of our data\n  //cdu tab\n  componentDidUpdate(prevProps, prevState) {\n    console.log('This is from state: ', this.state.beers)\n    \n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>PUNK API</h1>\n        <Beers beers={this.state.beers}/>\n      </header>\n    </div>\n    );\n  }\n\n  //promises\n  //there was an error in this\n  //res was undefined\n  // componentDidMount() {\n  //   fetch(PUNK_API)\n  //   .then((res)= res.json())\n  //  // this.setState updates state, which is currently an empty array\n  //   .then((data) => this.setState{\n  //    //points at beers (which was an empty array) and says beer is now data\n  //    //set data to the label beers\n  //     beers: data\n  //   })\n  // }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}